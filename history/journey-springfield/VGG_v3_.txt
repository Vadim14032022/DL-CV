Epoch 0 {'train': {'loss': 2.784885444977684, 'acc': 0.3130896930610295}, 'val': {'loss': 1.6024759426474542, 'acc': 0.689515165989969}} 
Epoch 1 {'train': {'loss': 2.1321970537744455, 'acc': 0.48459333572196345}, 'val': {'loss': 1.3101315377918497, 'acc': 0.740386911870074}} 
Epoch 2 {'train': {'loss': 1.9760352991451062, 'acc': 0.5208407978024603}, 'val': {'loss': 1.2191497867022547, 'acc': 0.7513732983042751}} 
Epoch 3 {'train': {'loss': 1.8970800313445013, 'acc': 0.5369640511166845}, 'val': {'loss': 1.117547047374526, 'acc': 0.7733460711726773}} 
Epoch 4 {'train': {'loss': 1.85378486851303, 'acc': 0.544488235996656}, 'val': {'loss': 1.1522726482783578, 'acc': 0.7719130642464772}} 
Epoch 5 {'train': {'loss': 1.8401131726045927, 'acc': 0.5496237907560014}, 'val': {'loss': 1.096976855019268, 'acc': 0.7788392643897779}} 
Epoch 6 {'train': {'loss': 1.8593295734301414, 'acc': 0.5437119312074525}, 'val': {'loss': 1.0926970630378805, 'acc': 0.780033436828278}} 
Epoch 7 {'train': {'loss': 1.836986374074835, 'acc': 0.5495043592499701}, 'val': {'loss': 1.1084612739778004, 'acc': 0.7786004299020779}} 
Epoch 8 {'train': {'loss': 1.794850831388872, 'acc': 0.5602531947927863}, 'val': {'loss': 1.0924287745455497, 'acc': 0.7819441127298782}} 
================================================================
Total params: 10,508,906
Trainable params: 1,103,914
Non-trainable params: 9,404,992
----------------------------------------------------------------
Input size (MB): 0.57
Forward/backward pass size (MB): 199.06
Params size (MB): 40.09
Estimated Total Size (MB): 239.73
----------------------------------------------------------------
None
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace=True)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace=True)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace=True)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace=True)
    (14): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (15): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (16): ReLU(inplace=True)
    (17): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): ReLU(inplace=True)
    (19): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (20): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): ReLU(inplace=True)
    (22): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (23): ReLU(inplace=True)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
  (classifier): Sequential(
    (0): BatchNorm1d(25088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Dropout1d(p=0.5, inplace=False)
    (2): Linear(in_features=25088, out_features=42, bias=True)
  )
)
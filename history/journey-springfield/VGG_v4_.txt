Epoch 0 {'train': {'loss': 1.854863909457471, 'acc': 0.5551176400334408}, 'val': {'loss': 1.2653123882581603, 'acc': 0.7456412705994746}} 
Epoch 1 {'train': {'loss': 1.008076011849805, 'acc': 0.7669294159799355}, 'val': {'loss': 1.1265075228964199, 'acc': 0.7723907332218772}} 
Epoch 2 {'train': {'loss': 0.8536212952151515, 'acc': 0.8032963095664636}, 'val': {'loss': 0.9871302645787835, 'acc': 0.7848101265822784}} 
Epoch 3 {'train': {'loss': 0.7843011813352829, 'acc': 0.8170309327600621}, 'val': {'loss': 0.9879949701581162, 'acc': 0.7833771196560784}} 
Epoch 4 {'train': {'loss': 0.7695668774226383, 'acc': 0.8172697957721247}, 'val': {'loss': 1.1008851211282271, 'acc': 0.7857654645330786}} 
Epoch 5 {'train': {'loss': 0.7498279482510645, 'acc': 0.8226442135435328}, 'val': {'loss': 0.9846710912191073, 'acc': 0.7864819679961786}} 
Epoch 6 {'train': {'loss': 0.7471718111944272, 'acc': 0.8225844977905171}, 'val': {'loss': 1.0401215594851774, 'acc': 0.7852877955576786}} 
Epoch 7 {'train': {'loss': 0.735131230068708, 'acc': 0.8252119909232055}, 'val': {'loss': 0.9349196455146693, 'acc': 0.7898256508239789}} 
Epoch 8 {'train': {'loss': 0.7498757960433874, 'acc': 0.8200167204108444}, 'val': {'loss': 1.0124542838438957, 'acc': 0.7912586577501791}} 
Epoch 9 {'train': {'loss': 0.7437329229368298, 'acc': 0.8236593813447988}, 'val': {'loss': 0.9192754877533239, 'acc': 0.7869596369715787}} 

================================================================
Total params: 10,508,906
Trainable params: 1,103,914
Non-trainable params: 9,404,992
----------------------------------------------------------------
Input size (MB): 0.57
Forward/backward pass size (MB): 199.06
Params size (MB): 40.09
Estimated Total Size (MB): 239.73
----------------------------------------------------------------
None
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): ReLU(inplace=True)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace=True)
    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU(inplace=True)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU(inplace=True)
    (14): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (15): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (16): ReLU(inplace=True)
    (17): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): ReLU(inplace=True)
    (19): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (20): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): ReLU(inplace=True)
    (22): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (23): ReLU(inplace=True)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
  (classifier): Sequential(
    (0): BatchNorm1d(25088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Dropout1d(p=0.2, inplace=False)
    (2): Linear(in_features=25088, out_features=42, bias=True)
  )
)